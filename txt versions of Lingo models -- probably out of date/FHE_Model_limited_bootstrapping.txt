MODEL:
SETS:
	OPERATION_TYPES : LATENCY;
	OPERATIONS : BOOTSTRAPPED, START_TIME, BOOTSTRAP_START_TIME, FINISH_TIME;
	CORES;
	OPERATION_CORE_TABLE(OPERATIONS, CORES) : B2C;
	OPERATION_TYPE_TABLE(OPERATIONS, OPERATION_TYPES) : OPERATION_IS_OF_TYPE;
	!OPERATION_OPERATION_TABLE(OPERATIONS, OPERATIONS) : BOrder, BOOTSTRAP_ON_SAME_CORE;
	OPERATION_OPERATION_TABLE(OPERATIONS, OPERATIONS) : BOrder;
	OPERATION_DEPENDENCIES(OPERATIONS, OPERATIONS);
ENDSETS

DATA:
	OPERATION_TYPES, LATENCY = @FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);
	OPERATIONS = @FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);
	OPERATION_IS_OF_TYPE = @FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);
	OPERATION_DEPENDENCIES = @FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);
	BOOTSTRAPPING_LATENCY = @FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);
ENDDATA

! Bootstrapping constraints defined in input file;
@FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);

DATA: !Input data specific to the limited bootstrapping model;
	CORES = @FILE(DDGs/random_graph3_two_bootstrapping_cores.LDT);
ENDDATA

@FOR( OPERATION_DEPENDENCIES(i, j) :
	FINISH_TIME(j) < START_TIME(i)
);

@FOR(OPERATIONS(i) :
	@SUM(CORES(j) : B2C(i,j)) = BOOTSTRAPPED(i)
);

@FOR(OPERATION_OPERATION_TABLE(i,j) | i #LT# j :
	!BOOTSTRAP_ON_SAME_CORE(i,j) = @SUM(CORES(k) : B2C(i,k) * B2C(j,k));
	!BOrder(i,j) + BOrder(j,i) = BOOTSTRAP_ON_SAME_CORE(i,j);


	!This version uses something like constant propogation or recalculation to eliminate the BOOTSTRAP_ON_SAME_CORE variable;
	BOrder(i,j) + BOrder(j,i) = @SUM(CORES(k) : B2C(i,k) * B2C(j,k));
);

@FOR(OPERATION_OPERATION_TABLE(i,j) | i #NE# j :
	BOOTSTRAP_START_TIME(j) >= FINISH_TIME(i) * BOrder(i,j);
);

@FOR( OPERATION_TYPE_TABLE(i, j) | OPERATION_IS_OF_TYPE(i, j) #EQ# 1: 
	BOOTSTRAP_START_TIME(i) >= START_TIME(i) + LATENCY(j)
);

@FOR(OPERATIONS(i) :
	FINISH_TIME(i) = BOOTSTRAP_START_TIME(i) + BOOTSTRAPPED(i) * BOOTSTRAPPING_LATENCY
);

min = @MAX(OPERATIONS(i) : FINISH_TIME(i));


@FOR(OPERATIONS: @BIN(BOOTSTRAPPED));
@FOR(OPERATION_CORE_TABLE: @BIN(B2C));
@FOR(OPERATION_OPERATION_TABLE: @BIN(BOOTSTRAP_ON_SAME_CORE));
@FOR(OPERATION_OPERATION_TABLE: @BIN(BOrder));
@FOR(OPERATIONS: @GIN(START_TIME));
@FOR(OPERATIONS: @GIN(BOOTSTRAP_START_TIME));
@FOR(OPERATIONS: @GIN(FINISH_TIME));

END